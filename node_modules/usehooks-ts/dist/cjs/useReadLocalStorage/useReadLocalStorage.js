"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = require("react");
const useEventListener_1 = require("../useEventListener");
function useReadLocalStorage(key) {
    const readValue = (0, react_1.useCallback)(() => {
        if (typeof window === 'undefined') {
            return null;
        }
        try {
            const item = window.localStorage.getItem(key);
            return item ? JSON.parse(item) : null;
        }
        catch (error) {
            console.warn(`Error reading localStorage key “${key}”:`, error);
            return null;
        }
    }, [key]);
    const [storedValue, setStoredValue] = (0, react_1.useState)(readValue);
    (0, react_1.useEffect)(() => {
        setStoredValue(readValue());
    }, []);
    const handleStorageChange = (0, react_1.useCallback)(() => {
        setStoredValue(readValue());
    }, [readValue]);
    (0, useEventListener_1.useEventListener)('storage', handleStorageChange);
    (0, useEventListener_1.useEventListener)('local-storage', handleStorageChange);
    return storedValue;
}
exports.default = useReadLocalStorage;
//# sourceMappingURL=useReadLocalStorage.js.map