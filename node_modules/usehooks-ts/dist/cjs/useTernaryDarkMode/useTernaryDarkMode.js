"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = require("react");
const useLocalStorage_1 = require("../useLocalStorage");
const useMediaQuery_1 = require("../useMediaQuery");
const useUpdateEffect_1 = require("../useUpdateEffect");
const COLOR_SCHEME_QUERY = '(prefers-color-scheme: dark)';
function useTernaryDarkMode() {
    const isDarkOS = (0, useMediaQuery_1.useMediaQuery)(COLOR_SCHEME_QUERY);
    const [ternaryDarkMode, setTernaryDarkMode] = (0, useLocalStorage_1.useLocalStorage)('usehooks-ts-ternary-dark-mode', 'system');
    const [isDarkMode, setDarkMode] = (0, react_1.useState)(isDarkOS);
    (0, useUpdateEffect_1.useUpdateEffect)(() => {
        if (ternaryDarkMode === 'system') {
            setDarkMode(isDarkOS);
        }
    }, [isDarkOS]);
    (0, react_1.useEffect)(() => {
        switch (ternaryDarkMode) {
            case 'light':
                setDarkMode(false);
                break;
            case 'system':
                setDarkMode(isDarkOS);
                break;
            case 'dark':
                setDarkMode(true);
                break;
        }
    }, [ternaryDarkMode, isDarkOS]);
    function toggleTernaryDarkMode() {
        const toggleDict = {
            light: 'system',
            system: 'dark',
            dark: 'light',
        };
        setTernaryDarkMode(prevMode => toggleDict[prevMode]);
    }
    return {
        isDarkMode,
        ternaryDarkMode,
        setTernaryDarkMode,
        toggleTernaryDarkMode,
    };
}
exports.default = useTernaryDarkMode;
//# sourceMappingURL=useTernaryDarkMode.js.map